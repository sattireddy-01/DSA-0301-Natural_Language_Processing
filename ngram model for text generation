import random
from collections import defaultdict
import nltk
nltk.download('punkt')
nltk.download('punkt_tab')
class BigramModel:
    def __init__(self, text):
        self.bigrams = defaultdict(list)
        words = nltk.word_tokenize(text.lower())
        
        for i in range(len(words) - 1):
            self.bigrams[words[i]].append(words[i + 1])
    
    def generate_text(self, start_word, length=10):
        current_word = start_word.lower()
        sentence = [current_word]
        
        for _ in range(length - 1):
            if current_word in self.bigrams:
                next_word = random.choice(self.bigrams[current_word])
                sentence.append(next_word)
                current_word = next_word
            else:
                break
        
        return " ".join(sentence)

text = """Natural language processing is a subfield of artificial intelligence. 
It helps computers understand, interpret, and generate human language."""

model = BigramModel(text)
generated_text = model.generate_text("natural", length=10)

print("Generated Text:", generated_text)
